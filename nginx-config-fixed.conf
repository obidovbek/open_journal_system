server {
    server_name publications.fstu.uz;
    
    # Logging
    access_log /var/log/nginx/pub-fstu-access.log;
    error_log /var/log/nginx/pub-fstu-error.log;
    
    # Security headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    location / {
        # Basic proxy settings
        proxy_pass http://192.168.10.119:8081;
        proxy_redirect off;
        
        # Real IP forwarding
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;
        
        # CRITICAL: HTTPS forwarding headers - these tell the container it's behind HTTPS
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-SSL on;
        proxy_set_header X-Forwarded-Host $host;
        
        # Prevent redirect loops by ensuring the container doesn't try to redirect
        proxy_set_header X-Forwarded-Prefix "";
        
        # Timeouts
        proxy_read_timeout 300;
        proxy_connect_timeout 300;
        proxy_send_timeout 300;
        
        # Buffer settings for better performance
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Handle WebSocket upgrades if needed
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
    
    # Handle static files efficiently (optional optimization)
    location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://192.168.10.119:8081;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Port 443;
        proxy_set_header X-Forwarded-SSL on;
        
        # Cache static assets
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header Vary Accept-Encoding;
    }
    
    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/publications.fstu.uz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/publications.fstu.uz/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    # HTTP to HTTPS redirect - only nginx should handle this
    listen 80;
    server_name publications.fstu.uz;
    return 301 https://$host$request_uri;
} 