apiVersion: apps/v1
kind: Deployment
metadata:
  name: ojs-deployment-fstu
  namespace: ojs-fstu
  labels:
    app: ojs-fstu
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ojs-fstu
  template:
    metadata:
      labels:
        app: ojs-fstu
    spec:
      securityContext:
        fsGroup: 82 # Ensure volumes are owned by www-data group (Alpine Linux UID)
        fsGroupChangePolicy: "Always"
      initContainers:
        - name: fix-permissions
          image: busybox:1.35
          command: ["sh", "-c"]
          args:
            - |
              echo "Setting up directories and permissions..."
              mkdir -p /var/www/files /var/www/html/public /var/www/html/cache /var/www/logs /var/www/html/config
              chown -R 82:82 /var/www/files /var/www/html/public /var/www/html/cache /var/www/logs
              chmod -R 755 /var/www/files /var/www/html/public /var/www/html/cache /var/www/logs
              # Create config.inc.php if it doesn't exist and set permissions
              if [ ! -f /var/www/html/config.inc.php ]; then
                touch /var/www/html/config.inc.php
              fi
              chown 82:82 /var/www/html/config.inc.php
              chmod 666 /var/www/html/config.inc.php
              echo "Permissions setup completed"
          volumeMounts:
            - name: ojs-files
              mountPath: /var/www/files
            - name: ojs-public
              mountPath: /var/www/html/public
            - name: ojs-cache
              mountPath: /var/www/html/cache
            - name: ojs-logs
              mountPath: /var/www/logs
            - name: ojs-config
              mountPath: /var/www/html/config
          securityContext:
            runAsUser: 0 # Run as root to fix permissions
            runAsGroup: 0
      containers:
        - name: ojs
          image: ojs-fstu:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          envFrom:
            - configMapRef:
                name: ojs-fstu-config
            - secretRef:
                name: ojs-fstu-secret
          volumeMounts:
            - name: ojs-files
              mountPath: /var/www/files
            - name: ojs-public
              mountPath: /var/www/html/public
            - name: ojs-cache
              mountPath: /var/www/html/cache
            - name: ojs-logs
              mountPath: /var/www/logs
            - name: ojs-config
              mountPath: /var/www/html/config
          securityContext:
            runAsUser: 0 # Run as root initially - OJS base image handles user switching
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - CHOWN
                - DAC_OVERRIDE
                - SETGID
                - SETUID
                - SYS_ADMIN
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "1Gi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /index.php
              port: 80
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /index.php
              port: 80
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
      volumes:
        - name: ojs-files
          persistentVolumeClaim:
            claimName: ojs-files-fstu-pvc
        - name: ojs-public
          persistentVolumeClaim:
            claimName: ojs-public-fstu-pvc
        - name: ojs-cache
          emptyDir: {}
        - name: ojs-logs
          emptyDir: {}
        - name: ojs-config
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: ojs-service-fstu
  namespace: ojs-fstu
  labels:
    app: ojs-fstu
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 80
      protocol: TCP
  selector:
    app: ojs-fstu
